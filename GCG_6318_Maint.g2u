Program.Sub.ScreenSU.Start
Gui.Form..Create(DashForm)
Gui.Form..Caption("Custom Quality Reject Maintenance")
Gui.Form..Size(1402,666)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form..BarHelpButton(True,"Custom Quality Reject Maintenance","Maintain Numeric, Alphabetical Reject Codes and Custom Rules","",1.0.0,"7/25/2021 12:36:22 PM","",0,0,False)
Gui.Form..BarExportButton(True)
Gui.Form..BarRefreshButton(True)
Gui.Form..Event(RefreshClick,cmdRefresh_Click)
Gui.Form..Event(ExportClick,Form_ExportClick)
Gui.Form..BarAddButton("CheckRules","Check Rules",V.Enum.Image!CHECK_BLACK)
Gui.Form..BarAddButton("SaveCodes","Save Codes",V.Enum.Image!SAVE_BLACK)
Gui.Form..Event(UserButtonClicked,Form_UserButtonClicked)
Gui.Form.gsCodes.Create(GsGridControl)
Gui.Form.gsCodes.Enabled(True)
Gui.Form.gsCodes.Visible(True)
Gui.Form.gsCodes.Zorder(0)
Gui.Form.gsCodes.Size(1383,590)
Gui.Form.gsCodes.Position(10,0)
Gui.Form.gsCodes.Anchor(15)
Gui.Form.gsCodes.Event(RowCellClick,gsCodes_RowCellClick)
Gui.Form.gsCodes.Event(CellValueChanged,gsCodes_CellValueChanged)
Gui.SetBulk..Create(BaseForm)
Gui.SetBulk..Caption("Set Bulk Values")
Gui.SetBulk..Size(633,115)
Gui.SetBulk..MinX(0)
Gui.SetBulk..MinY(0)
Gui.SetBulk..Position(0,0)
Gui.SetBulk..AlwaysOnTop(False)
Gui.SetBulk..FontName("Tahoma")
Gui.SetBulk..FontSize(8.25)
Gui.SetBulk..ControlBox(True)
Gui.SetBulk..MaxButton(True)
Gui.SetBulk..MinButton(True)
Gui.SetBulk..MousePointer(0)
Gui.SetBulk..Moveable(True)
Gui.SetBulk..Sizeable(True)
Gui.SetBulk..ShowInTaskBar(True)
Gui.SetBulk..TitleBar(True)
Gui.SetBulk..Event(UnLoad,SetBulk_UnLoad)
Gui.SetBulk.ddlColumns.Create(DropDownList)
Gui.SetBulk.ddlColumns.Enabled(True)
Gui.SetBulk.ddlColumns.Visible(True)
Gui.SetBulk.ddlColumns.Zorder(0)
Gui.SetBulk.ddlColumns.Size(271,20)
Gui.SetBulk.ddlColumns.Position(18,21)
Gui.SetBulk.ddlColumns.FontName("Tahoma")
Gui.SetBulk.ddlColumns.FontSize(8.25)
Gui.SetBulk.ddlColumns.Event(LostFocus,ddlColumns_LostFocus)
Gui.SetBulk.ddlColumns.Event(Click,ddlColumns_Click)
Gui.SetBulk.ddlColumns.TabStop(True)
Gui.SetBulk.ddlColumns.TabIndex(1)
Gui.SetBulk.cmdOKSetBulk.Create(Button)
Gui.SetBulk.cmdOKSetBulk.Enabled(True)
Gui.SetBulk.cmdOKSetBulk.Visible(True)
Gui.SetBulk.cmdOKSetBulk.Zorder(0)
Gui.SetBulk.cmdOKSetBulk.Size(75,23)
Gui.SetBulk.cmdOKSetBulk.Position(19,50)
Gui.SetBulk.cmdOKSetBulk.Caption("OK")
Gui.SetBulk.cmdOKSetBulk.FontName("Tahoma")
Gui.SetBulk.cmdOKSetBulk.FontSize(8.25)
Gui.SetBulk.cmdOKSetBulk.Event(Click,cmdOKSetBulk_Click)
Gui.SetBulk.cmdOKSetBulk.TabStop(True)
Gui.SetBulk.cmdOKSetBulk.TabIndex(8)
Gui.SetBulk.txtTextValue.Create(TextBox,"",True,312,20,0,308,21,True,0,"Tahoma",8.25,,1)
Gui.SetBulk.txtTextValue.TabStop(True)
Gui.SetBulk.txtTextValue.TabIndex(7)
Gui.SetBulk.lbl1.Create(Label,"Column (Select and hit Tab)",True,132,13,0,17,5,True,0,"Tahoma",8.25,,0,0)
Gui.SetBulk.lbl1.BorderStyle(0)
Gui.SetBulk.ddlBitValue.Create(DropDownList)
Gui.SetBulk.ddlBitValue.Enabled(True)
Gui.SetBulk.ddlBitValue.Visible(True)
Gui.SetBulk.ddlBitValue.Zorder(0)
Gui.SetBulk.ddlBitValue.Size(66,20)
Gui.SetBulk.ddlBitValue.Position(309,21)
Gui.SetBulk.ddlBitValue.FontName("Tahoma")
Gui.SetBulk.ddlBitValue.FontSize(8.25)
Gui.SetBulk.ddlBitValue.TabStop(True)
Gui.SetBulk.ddlBitValue.TabIndex(4)
Gui.SetBulk.txtDatatype.Create(TextBox,"",False,100,20,0,310,52,True,0,"Tahoma",8.25,,1)
Gui.SetBulk.txtColumn.Create(TextBox,"",False,206,20,0,97,53,True,0,"Tahoma",8.25,,1)
Gui.SetBulk.txtNumeric.Create(TextBox,"",True,82,20,0,310,20,True,1,"Tahoma",8.25,,1)
Gui.SetBulk.txtNumeric.NumericOnly(1)
Gui.SetBulk.txtNumeric.TabStop(True)
Gui.SetBulk.txtNumeric.TabIndex(6)
Gui.SetBulk.ddlSign.Create(DropDownList)
Gui.SetBulk.ddlSign.Enabled(True)
Gui.SetBulk.ddlSign.Visible(True)
Gui.SetBulk.ddlSign.Zorder(0)
Gui.SetBulk.ddlSign.Size(51,20)
Gui.SetBulk.ddlSign.Position(307,20)
Gui.SetBulk.ddlSign.FontName("Tahoma")
Gui.SetBulk.ddlSign.FontSize(8.25)
Gui.SetBulk.ddlSign.TabStop(True)
Gui.SetBulk.ddlSign.TabIndex(5)
Gui.SetBulk.ddlAndOr.Create(DropDownList)
Gui.SetBulk.ddlAndOr.Enabled(True)
Gui.SetBulk.ddlAndOr.Visible(True)
Gui.SetBulk.ddlAndOr.Zorder(0)
Gui.SetBulk.ddlAndOr.Size(62,20)
Gui.SetBulk.ddlAndOr.Position(308,20)
Gui.SetBulk.ddlAndOr.FontName("Tahoma")
Gui.SetBulk.ddlAndOr.FontSize(8.25)
Gui.SetBulk.ddlAndOr.TabStop(True)
Gui.SetBulk.ddlAndOr.TabIndex(3)
Gui.SetBulk.cmdValue.Create(Button)
Gui.SetBulk.cmdValue.Enabled(True)
Gui.SetBulk.cmdValue.Visible(True)
Gui.SetBulk.cmdValue.Zorder(0)
Gui.SetBulk.cmdValue.Size(49,17)
Gui.SetBulk.cmdValue.Position(308,1)
Gui.SetBulk.cmdValue.Caption("Value")
Gui.SetBulk.cmdValue.FontName("Tahoma")
Gui.SetBulk.cmdValue.FontSize(8.25)
Gui.SetBulk.cmdValue.BorderStyle(0)
Gui.SetBulk.cmdValue.TabStop(True)
Gui.SetBulk.cmdValue.TabIndex(2)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sRow.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
f.Intrinsic.Control.Try
	F.Intrinsic.Task.SetEnvironmentVariable("USEDARKTHEME",False)
	gui.Form..applytheme()
	
	f.ODBC.Connection!conx.OpenCompanyConnection
	
	f.Intrinsic.Control.CallSub(Check_Custom_Table)
	f.Intrinsic.Control.CallSub(Create_Table)
	f.Intrinsic.Control.CallSub(Create_Dictionary)
	f.Intrinsic.Control.CallSub(GetData)
	gui.Form.gsCodes.AddGridviewFromDatatable("gvCodes","Codes")
	f.Intrinsic.Control.CallSub(Format_gvCodes)
	gui.Form.gsCodes.MainView("gvCodes")
	f.Intrinsic.Control.CallSub(Context_Menu)
	
	gui.SetBulk.ddlBitValue.AddItem("False")
	gui.SetBulk.ddlBitValue.AddItem("True")
	gui.SetBulk.ddlSign.AddItem("")
	gui.SetBulk.ddlSign.AddItem(">")
	gui.SetBulk.ddlSign.AddItem(">=")
	gui.SetBulk.ddlSign.AddItem("<")
	gui.SetBulk.ddlSign.AddItem("<=")
	gui.SetBulk.ddlSign.AddItem("=")
	gui.SetBulk.ddlAndOr.AddItem("")
	gui.SetBulk.ddlAndOr.AddItem("And")
	gui.SetBulk.ddlAndOr.AddItem("Or")		

	gui.Form..Show

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Main.End

Program.Sub.Check_Custom_Table.Start
f.Intrinsic.Control.Try
	v.Local.bExist.Declare

	Function.ODBC.Connection!conx.TableExists("GCG_6318_Rules",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist.Not)
		f.ODBC.Connection!conx.Execute("CREATE TABLE GCG_6318_Rules(NumCode CHAR(2), QuantitySign VarChar(2), QuantityValue VarChar(20),AndOr Varchar(3), DollarsSign VarChar(2), DollarsValue VarChar(20),Email Bit,RuleClause Varchar(100),ApplyMapAutoScrap Bit);")
	f.Intrinsic.Control.Endif	

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Check_Custom_Table.End

Program.Sub.Create_table.Start
f.Intrinsic.Control.Try

	f.Intrinsic.Control.If(v.DataTable.Codes.Exists)
		f.Data.DataTable.Close("Codes")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.Create("Codes",True)
	f.Data.DataTable.AddColumn("Codes","NumOrder","Long",0)
	f.Data.DataTable.AddColumn("Codes","NumCode","String","")
	f.Data.DataTable.AddColumn("Codes","NumCodeFirstChar","String","")	
	f.Data.DataTable.AddColumn("Codes","NumCodeSecondChar","String","")	
	f.Data.DataTable.AddColumn("Codes","NumCodeDescription","String","")
	f.Data.DataTable.AddColumn("Codes","NumCodeAutoDispose","Boolean",False)
	f.Data.DataTable.AddColumn("Codes","NumCodeWOHold","Boolean",False)	
	f.Data.DataTable.AddColumn("Codes","QuantitySign","String","")
	f.Data.DataTable.AddColumn("Codes","QuantityValue","String","")
	f.Data.DataTable.AddColumn("Codes","AndOr","String","")	
	f.Data.DataTable.AddColumn("Codes","DollarsSign","String","")
	f.Data.DataTable.AddColumn("Codes","DollarsValue","String","")
	
	f.Data.DataTable.AddColumn("Codes","Email","Boolean",False)
	
	f.Data.DataTable.AddColumn("Codes","ApplyMapAutoScrap","Boolean",False)
	
	f.Data.DataTable.AddColumn("Codes","AlphaCode","String","")
	f.Data.DataTable.AddColumn("Codes","AlphaCodeFirstChar","String","")
	f.Data.DataTable.AddColumn("Codes","AlphaCodeSecondChar","String","")	
	f.Data.DataTable.AddColumn("Codes","AlphaCodeDescription","String","")
	f.Data.DataTable.AddColumn("Codes","AlphaCodeAutoDispose","Boolean",False)
	f.Data.DataTable.AddColumn("Codes","AlphaCodeWOHold","Boolean",False)
	f.Data.DataTable.AddColumn("Codes","AlphaCodeExisted","String","")	
	f.Data.DataTable.AddColumn("Codes","HorsMap","String","")	
	f.Data.DataTable.AddColumn("Codes","RuleClause","String","")

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Create_table.End

Program.Sub.Create_Dictionary.Start
f.Intrinsic.Control.Try

	f.Data.DataTable.CreateFromString("NumToAlpha","0~A,1~B,2~C,3~D,4~E,5~F,6~G,7~H,8~I,9~J, ~Z","Num*!*Alpha","String*!*String","~",",",True)
	f.Data.Dictionary.CreateFromDatatable("dictNumToAlpha","NumToAlpha","Num","Alpha")
	f.Data.Dictionary.SetDefaultReturn("dictNumToAlpha"," ")
	
	'ColumnName
	f.Data.Dictionary.Create("dictBulkColumns")
	f.Data.Dictionary.AddItem("dictBulkColumns","NumCodeDescription","Description (Num. Code)")
	f.Data.Dictionary.AddItem("dictBulkColumns","NumCodeAutoDispose","Auto Dispose (Num. Code)")
	f.Data.Dictionary.AddItem("dictBulkColumns","NumCodeWOHold","WO Hold (Num. Code)")	
	f.Data.Dictionary.AddItem("dictBulkColumns","QuantitySign","Quantity Sign")
	f.Data.Dictionary.AddItem("dictBulkColumns","QuantityValue","Quantity Value")
	f.Data.Dictionary.AddItem("dictBulkColumns","AndOr","And/Or")
	f.Data.Dictionary.AddItem("dictBulkColumns","DollarsSign","Dollars Sign")
	f.Data.Dictionary.AddItem("dictBulkColumns","DollarsValue","Dollars Value")
	f.Data.Dictionary.AddItem("dictBulkColumns","Email","Email")
	f.Data.Dictionary.AddItem("dictBulkColumns","ApplyMapAutoScrap","Apply Mapping Auto Scrap")
	f.Data.Dictionary.AddItem("dictBulkColumns","AlphaCodeDescription","Description (Alpha. Code)")
	f.Data.Dictionary.AddItem("dictBulkColumns","AlphaCodeAutoDispose","Auto Dispose (Alpha. Code)")
	f.Data.Dictionary.AddItem("dictBulkColumns","AlphaCodeWOHold","WO Hold (Alpha. Code)")	
	f.Data.Dictionary.SetDefaultReturn("dictBulkColumns","")
	gui.SetBulk.ddlColumns.AddItems("Dictionary","dictBulkColumns")
	gui.SetBulk.ddlColumns.ListIndex(0)	
	
	'ColumnDataType
	f.Data.Dictionary.Create("dictColumnDataType")
	f.Data.Dictionary.AddItem("dictColumnDataType","NumCodeDescription","String")
	f.Data.Dictionary.AddItem("dictColumnDataType","NumCodeAutoDispose","Boolean")
	f.Data.Dictionary.AddItem("dictColumnDataType","NumCodeWOHold","Boolean")	
	f.Data.Dictionary.AddItem("dictColumnDataType","QuantitySign","Sign")
	f.Data.Dictionary.AddItem("dictColumnDataType","QuantityValue","Numeric")
	f.Data.Dictionary.AddItem("dictColumnDataType","AndOr","AndOr")
	f.Data.Dictionary.AddItem("dictColumnDataType","DollarsSign","Sign")
	f.Data.Dictionary.AddItem("dictColumnDataType","DollarsValue","Numeric")
	f.Data.Dictionary.AddItem("dictColumnDataType","Email","Boolean")
	f.Data.Dictionary.AddItem("dictColumnDataType","ApplyMapAutoScrap","Boolean")
	f.Data.Dictionary.AddItem("dictColumnDataType","AlphaCodeDescription","String")
	f.Data.Dictionary.AddItem("dictColumnDataType","AlphaCodeAutoDispose","Boolean")
	f.Data.Dictionary.AddItem("dictColumnDataType","AlphaCodeWOHold","Boolean")	
	f.Data.Dictionary.SetDefaultReturn("dictColumnDataType","")		


f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Create_Dictionary.End

Program.Sub.cmdRefresh_Click.Start
f.Intrinsic.Control.Try

	gui.Form.gsCodes.ClearRows("gvCodes")
	f.Intrinsic.Control.CallSub(Create_Table)
	f.Intrinsic.Control.CallSub(GetData)
	gui.Form.gsCodes.AddGridviewFromDatatable("gvCodes","Codes")
	f.Intrinsic.Control.CallSub(Format_gvCodes)
	gui.Form.gsCodes.MainView("gvCodes")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.GetData.Start
f.Intrinsic.Control.Try
	v.Local.iCnt.Declare
	v.Local.sAlphaList.Declare
	v.Local.sInMapList.Declare
	v.Local.sSQL.Declare

	'Get Numeric Codes	
	f.Intrinsic.Control.If(v.DataTable.NumCodes.Exists)
		f.Data.DataTable.Close("NumCodes")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("NumCodes","conx","Select left(Code,2) as NumCode,left(Code,1) as NumCodeFirstChar,substring(Code,2,1) as NumCodeSecondChar, Descr as NumCodeDescription, If(IsNull(Dispose_Scrap,'') = 'Y',Convert(1,SQL_Bit),Convert(0,SQL_Bit)) as NumCodeAutoDispose, If(IsNull(WO_Hold,'') = 'Y',Convert(1,SQL_Bit),Convert(0,SQL_Bit)) as  NumCodeWOHold,'' as  AlphaCodeExisted,'' as  HorsMap  from Rejected_Code WHERE IsNumeric(LTRIM(RTRIM(CODE))) = 1 and LTRIM(RTRIM(CODE)) <> '' order by NumCode",True)
	
	f.Data.DataTable.Merge("NumCodes","Codes",False,2)
	
	f.Data.Datatable.FillFromDictionary("Codes","dictNumToAlpha","NumCodeFirstChar","AlphaCodeFirstChar")
	f.Data.Datatable.FillFromDictionary("Codes","dictNumToAlpha","NumCodeSecondChar","AlphaCodeSecondChar")
	
	f.Data.DataTable.AddExpressionColumn("Codes","AlphaCodeRaw","String","AlphaCodeFirstChar + AlphaCodeSecondChar")
	f.Data.DataTable.CopyColumn("Codes","AlphaCodeRaw","AlphaCode")
	f.Data.DataTable.RemoveColumn("Codes","AlphaCodeRaw")
	f.Data.DataTable.AcceptChanges("Codes")

	'Fill Alpha codes if Alpha codes are currently in the database
	'Otherwise displayed as New
	f.Data.DataView.Create("Codes","viewCodes")
	f.Data.DataView.ToString("Codes","viewCodes","AlphaCode","","','",v.Local.sAlphaList)
	f.Data.DataView.Close("Codes","viewCodes")
	
	f.Data.Dictionary.CreateFromSQL("dictAlphaExisted","conx","Select left(Code,2) as Code,'Yes' as Existed from Rejected_Code")
	f.Data.Dictionary.SetDefaultReturn("dictAlphaExisted","")	
	f.Data.DataTable.FillFromDictionary("Codes","dictAlphaExisted","AlphaCode","AlphaCodeExisted")
	f.Data.Dictionary.Close("dictAlphaExisted")	
	
	f.Data.DataTable.CreateFromSQL("CurrenRejectedCodesDB","conx","Select left(Code,2) as NumCode, Descr, If(IsNull(Dispose_Scrap,'') = 'Y',Convert(1,SQL_Bit),Convert(0,SQL_Bit)) as NumCodeAutoDispose, If(IsNull(WO_Hold,'') = 'Y',Convert(1,SQL_Bit),Convert(0,SQL_Bit)) as  NumCodeWOHold from Rejected_Code",True)
	'dictDescr	
	f.Data.Dictionary.CreateFromDatatable("dictDescr","CurrenRejectedCodesDB","NumCode","Descr")
	f.Data.Dictionary.SetDefaultReturn("dictDescr","")	
	'dictAutoDisposed	
	f.Data.Dictionary.CreateFromDatatable("dictAutoDisposed","CurrenRejectedCodesDB","NumCode","NumCodeAutoDispose")
	f.Data.Dictionary.SetDefaultReturn("dictAutoDisposed",False)
	'dictWOHold	
	f.Data.Dictionary.CreateFromDatatable("dictWOHold","CurrenRejectedCodesDB","NumCode","NumCodeWOHold")
	f.Data.Dictionary.SetDefaultReturn("dictWOHold",False)	
	
	'Fill the existed from database
	f.Data.DataView.Create("Codes","vExisted",22,"IsNull(AlphaCodeExisted,'') = 'Yes'","")
	f.Data.DataView.FillFromDictionary("Codes","vExisted","dictDescr","AlphaCode","AlphaCodeDescription")
	f.Data.DataView.FillFromDictionary("Codes","vExisted","dictAutoDisposed","AlphaCode","AlphaCodeAutoDispose")
	f.Data.DataView.FillFromDictionary("Codes","vExisted","dictWOHold","AlphaCode","AlphaCodeWOHold")
	'Fill the non-existed by copying over from the numeric codes
	f.Data.DataView.SetFilter("Codes","vExisted","IsNull(AlphaCodeExisted,'') = ''")
	f.Data.DataView.FillFromDictionary("Codes","vExisted","dictDescr","NumCode","AlphaCodeDescription")
	f.Data.DataView.FillFromDictionary("Codes","vExisted","dictAutoDisposed","NumCode","AlphaCodeAutoDispose")
	f.Data.DataView.FillFromDictionary("Codes","vExisted","dictWOHold","NumCode","AlphaCodeWOHold")

	f.Data.Datatable.Close("CurrenRejectedCodesDB")
	f.Data.Dictionary.Close("dictDescr")
	f.Data.Dictionary.Close("dictAutoDisposed")
	f.Data.Dictionary.Close("dictWOHold")
	f.Data.DataView.Close("Codes","vExisted")	
	
	'Get Alpha Codes that is not in (1) and (2) that is currently in database
	
	f.Data.DataView.Create("Codes","vInMap")
	f.Data.DataView.ToString("Codes","vInMap","AlphaCode","","','",v.Local.sInMapList)
	f.Data.DataView.Close("Codes","vInMap")
	
	'Get hors map (codes that is alphabetical but not in the InMap)
	f.Intrinsic.String.Build("Select left(Code,2) as AlphaCode,left(Code,1) as AlphaCodeFirstChar, substring(Code,2,1) as AlphaCodeSecondChar,Descr as AlphaCodeDescription, If(IsNull(Dispose_Scrap,'') = 'Y',Convert(1,SQL_Bit),Convert(0,SQL_Bit)) as AlphaCodeAutoDispose, If(IsNull(WO_Hold,'') = 'Y',Convert(1,SQL_Bit),Convert(0,SQL_Bit)) as  AlphaCodeWOHold,'Yes' as  AlphaCodeExisted,'Yes' as  HorsMap from Rejected_Code WHERE IsNumeric(LTRIM(RTRIM(CODE))) = 0 and Left(Code,2) not in ('{0}') ",v.Local.sInMapList,v.Local.sSQL)
	f.Data.Datatable.CreateFromSQL("horsMap","conx",v.Local.sSQL,True)
	f.Data.DataTable.Merge("horsMap","Codes",False,2)
	f.Data.DataTable.Close("horsMap")
	
	f.Data.Datatable.SetSeries("Codes","NumOrder",0,1)
	
	'Populate Custom rules
	f.Data.DataTable.CreateFromSQL("Rules","conx","Select NumCode,QuantitySign,QuantityValue,AndOr,DollarsSign,DollarsValue,Email,RuleClause,ApplyMapAutoScrap from GCG_6318_Rules",True)
	
	f.Intrinsic.Control.CallSub(Add_Using_Dictionaries,"SourceTable","Rules","KeyColumn","NumCode","ColumnList","QuantitySign~String~,QuantityValue~String~,AndOr~String~,DollarsSign~String~,DollarsValue~String~,Email~Boolean~False,RuleClause~String~,ApplyMapAutoScrap~Boolean~False","TargetTable","Codes")
	f.Data.DataTable.Close("Rules")
	

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.GetData.End

Program.Sub.Add_Using_Dictionaries.Start
'Parameters: SourceTable,KeyColumn,ColumnList(ColumnName~DataType~DefaultValue),TargetTable
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sColumns.Declare
	v.Local.sDataType.Declare
	v.Local.iCnt.Declare
	v.Local.sHold.Declare
	v.Local.sCol.Declare
	v.Local.sDefaultReturn.Declare
	
	f.Intrinsic.String.Split(v.Args.ColumnList,",",v.Local.sColumns)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sColumns.UBound,1)
		f.Intrinsic.String.Split(v.Local.sColumns(v.Local.iCnt),"~",v.Local.sHold)
		v.Local.sCol.Set(v.Local.sHold(0).Trim)
		v.Local.sDataType.Set(v.Local.sHold(1).Trim)
		v.Local.sDefaultReturn.set(v.Local.sHold(2).Trim)
		f.Data.Dictionary.CreateFromDataTable(v.Local.sCol,v.Args.SourceTable,v.Args.KeyColumn,v.Local.sCol)
		f.Data.Dictionary.SetDefaultReturn(v.Local.sCol,v.Local.sDefaultReturn)
		f.Data.DataTable.FillFromDictionary(v.Args.TargetTable,v.Local.sCol,v.Args.KeyColumn,v.Local.sCol)
		f.Data.Dictionary.Close(v.Local.sCol)	
	f.Intrinsic.Control.Next(v.Local.iCnt)	

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Add_Using_Dictionaries.End

Program.Sub.Format_gvCodes.Start
f.Intrinsic.Control.Try
	v.Local.iCnt.Declare

	gui.Form.gsCodes.SuspendLayout()
		
	gui.Form.gsCodes.SetGridViewProperty("gvCodes","AllowSort",True)
	gui.Form.gsCodes.SetGridViewProperty("gvCodes","AllowFilter",True)
	gui.Form.gsCodes.SetGridViewProperty("gvCodes","OptionsViewShowGroupPanel",False)
	gui.Form.gsCodes.SetGridviewProperty("gvCodes","AllowColumnResizing",True)
	gui.Form.gsCodes.SetGridviewProperty("gvCodes","OptionsViewColumnAutoWidth",False)	
	'GUI.Form.gsCodes.SetGridViewProperty("gvCodes","OptionsSelectionEnableAppearanceFocusedRow",False)	
	gui.Form.gsCodes.SetGridViewProperty("gvCodes","OptionsViewShowAutoFilterRow",True)
	Gui.Form.gsCodes.SetGridViewProperty("gvCodes","ColumnPanelRowHeight","50")
	
	Gui.Form.gsCodes.SetGridViewProperty("gvCodes","MultiSelect",True)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","Visible",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","Visible",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","Visible",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","Visible",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","Visible",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","RuleClause","Visible",True)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","Width","60")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","Width","60")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","Width","100")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","Width","100")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","Width","120")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","Width","100")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","Width","100")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","Width","80")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","Width","80")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","Width","60")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","Width","80")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","Width","80")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","Width","60")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","Width","80")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","Width","80")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","Width","60")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","Width","120")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","Width","100")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","Width","100")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","Width","80")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","Width","60")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","Width","110")
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","Visible",False)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","Visible",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","Visible",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","Visible",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","RuleClause","Visible",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","Visible",False)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","RuleClause","AllowShowHide",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","AllowShowHide",False)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","VisibleIndex",v.local.iCnt.++)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","VisibleIndex",v.local.iCnt.++)
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","VisibleIndex",v.local.iCnt.++)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","VisibleIndex",v.local.iCnt.++)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","VisibleIndex",v.local.iCnt.++)	
	
	'Bold
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","HeaderFontBold",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","HeaderFontBold",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","HeaderFontBold",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","HeaderFontBold",True)
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","HeaderFontBold",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","HeaderFontBold",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","HeaderFontBold",True)	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","HeaderFontBold",True)
	
	'Header wrapped
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","HeaderWordWrap","Wrap")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","HeaderWordWrap","Wrap")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","HeaderWordWrap","Wrap")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","HeaderWordWrap","Wrap")
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","HeaderWordWrap","Wrap")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","HeaderWordWrap","Wrap")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","HeaderWordWrap","Wrap")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","HeaderWordWrap","Wrap")	
	
	'Header Top
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","HeaderVAlignment","Top")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","HeaderVAlignment","Top")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","HeaderVAlignment","Top")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","HeaderVAlignment","Top")
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","HeaderVAlignment","Top")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","HeaderVAlignment","Top")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","HeaderVAlignment","Top")
	
	'Header horizon
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","HeaderHAlignment","far")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","HeaderHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","HeaderHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","HeaderHAlignment","near")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","HeaderHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","HeaderHAlignment","far")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","HeaderHAlignment","far")
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","HeaderHAlignment","near")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","HeaderHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","HeaderHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","HeaderHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","HeaderHAlignment","center")
	
	'cell horizon
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","CellHAlignment","far")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","CellHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","CellHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","CellHAlignment","near")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","CellHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","CellHAlignment","far")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","CellHAlignment","far")
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","CellHAlignment","far")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","CellHAlignment","near")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","CellHAlignment","center")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","CellHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","CellHAlignment","center")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","CellHAlignment","center")	
	
	'Caption
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumOrder","Caption","Order")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","Caption","Numeric Code")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","Caption","Num. 1st Char")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","Caption","Num. 2nd Char")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","Caption","Description (Num. Code)")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","Caption","Auto Dispose (Num. Code)")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","Caption","WO Hold (Num. Code)")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","Caption","Quantity Sign")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","Caption","Quantity Value")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","Caption","And/Or")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","Caption","Dollars Sign")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","Caption","Dollars Value")
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","Caption","Email")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeFirstChar","Caption","Alpha. 1st Char")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeSecondChar","Caption","Alpha. 2nd Char")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCode","Caption","Alpha Code")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","Caption","Description (Alpha. Code)")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","Caption","Auto Dispose (Alpha. Code)")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","Caption","WO Hold (Alpha. Code)")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeExisted","Caption","Alpha Code Existed")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","HorsMap","Caption","Hors Map")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","Caption","Apply Mapping Auto Scrap")
	
	'Header back color HeaderBackColor
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCode","HeaderBackColor","Beige")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeFirstChar","HeaderBackColor","Beige")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeSecondChar","HeaderBackColor","Beige")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","HeaderBackColor","Beige")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","HeaderBackColor","Beige")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","HeaderBackColor","Beige")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","HeaderBackColor","Khaki")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","HeaderBackColor","Khaki")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","HeaderBackColor","Khaki")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","HeaderBackColor","Khaki")
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","HeaderBackColor","Khaki")
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","HeaderBackColor","Cornsilk")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","HeaderBackColor","Cornsilk")	
	
	'Allow Edit
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantitySign","ReadOnly",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","QuantityValue","ReadOnly",False)	
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsSign","ReadOnly",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","DollarsValue","ReadOnly",False)	
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AndOr","ReadOnly",False)	
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","ReadOnly",False)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","AllowEdit",True)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","ReadOnly",False)
	
	'Maxlength
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeDescription","MaxLength","50")	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeDescription","MaxLength","50")	
	
	
	'Not allow edit but use rowcell click

	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","AllowEdit",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeAutoDispose","ReadOnly",True)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","AllowEdit",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","NumCodeWOHold","ReadOnly",True)
	
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","AllowEdit",False)
	'gui.Form.gsCodes.SetColumnProperty("gvCodes","Email","ReadOnly",True)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","AllowEdit",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeAutoDispose","ReadOnly",True)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","AllowEdit",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","AlphaCodeWOHold","ReadOnly",True)
	
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","AllowEdit",False)
	gui.Form.gsCodes.SetColumnProperty("gvCodes","ApplyMapAutoScrap","ReadOnly",True)
	

	gui.Form.gsCodes.ColumnEdit("gvCodes","QuantitySign","Dropdownlist","*!*>*!*>=*!*<*!*<=*!*=")
	gui.Form.gsCodes.ColumnEdit("gvCodes","DollarsSign","Dropdownlist","*!*>*!*>=*!*<*!*<=*!*=")
	gui.Form.gsCodes.ColumnEdit("gvCodes","DollarsSign","Dropdownlist","*!*>*!*>=*!*<*!*<=*!*=")
	gui.Form.gsCodes.ColumnEdit("gvCodes","AndOr","Dropdownlist","*!*And*!*Or")
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCode","a1","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCode","a1","BACKCOLOR","LIGHTBLUE")
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCodeFirstChar","a2","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCodeFirstChar","a2","BACKCOLOR","LIGHTBLUE")
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCodeSecondChar","a3","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCodeSecondChar","a3","BACKCOLOR","LIGHTBLUE")
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCodeDescription","a4","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCodeDescription","a4","BACKCOLOR","LIGHTBLUE")
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCodeAutoDispose","a5","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCodeAutoDispose","a5","BACKCOLOR","LIGHTBLUE")	
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCodeWOHold","a6","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCodeWOHold","a6","BACKCOLOR","LIGHTBLUE")	
	
	gui.Form.gsCodes.AddStyleFormatCondition("gvCodes","AlphaCodeExisted","a7","Expression","IsNull([AlphaCodeExisted],'') = 'Yes'")
	gui.Form.gsCodes.SetStyleFormatConditionProperty("gvCodes","AlphaCodeExisted","a7","BACKCOLOR","LIGHTBLUE")		
	
	gui.Form.gsCodes.ResumeLayout()
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry		
Program.Sub.Format_gvCodes.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.CallSub(Unload)
Program.Sub.Form_UnLoad.End

Program.Sub.Context_Menu.Start
f.Intrinsic.Control.Try
	
	Gui.Form..ContextMenuCreate("MainContext")
	Gui.Form..ContextMenuAddItem("MainContext","CheckRule",0,"Check Rule")	
	Gui.Form..ContextMenuAddItem("MainContext","Refresh",0,"Refresh")
	Gui.Form..ContextMenuAddItem("MainContext","Export",0,"Export")
	Gui.Form..ContextMenuAddItem("MainContext","SetBulk",0,"Set Bulk Value")
	
	Gui.Form..ContextMenuSetItemEventHandler("MainContext","CheckRule","MainContext_Click")
	Gui.Form..ContextMenuSetItemEventHandler("MainContext","Refresh","MainContext_Click")
	Gui.Form..ContextMenuSetItemEventHandler("MainContext","Export","MainContext_Click")
	Gui.Form..ContextMenuSetItemEventHandler("MainContext","SetBulk","MainContext_Click")
	
	Gui.Form.gsCodes.ContextMenuAttach("MainContext")

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.Context_Menu.End

Program.Sub.MainContext_Click.Start
f.Intrinsic.Control.Try
	v.Local.sRow.Declare
	
	F.Intrinsic.Control.SelectCase(v.Args.ItemName)
		f.Intrinsic.Control.Case("CHECKRULE")
			F.Intrinsic.Control.CallSub(Check_Rule)
		f.Intrinsic.Control.Case("REFRESH")
			F.Intrinsic.Control.CallSub(cmdRefresh_Click)
		f.Intrinsic.Control.Case("EXPORT")
			F.Intrinsic.Control.CallSub(Form_ExportClick)
		f.Intrinsic.Control.Case("SETBULK")
			'Check if there are rows highlighted
			gui.Form.gsCodes.GetSelectedRows("gvCodes",v.Local.sRow)
			f.Intrinsic.Control.If(v.Local.sRow.Trim,=,"")
				f.Intrinsic.UI.Msgbox("Please select a row.","No Row Selected")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			v.Global.sRow.Set(v.Local.sRow)
			
			gui.SetBulk.ddlColumns.ListIndex(0)			
			gui.Form..Enabled(False)
			gui.SetBulk..Visible(True)
			f.Intrinsic.Control.CallSub(ddlColumns_Click)
			gui.SetBulk.ddlColumns.SetFocus()		
			
	F.Intrinsic.Control.EndSelect

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.MainContext_Click.End

Program.Sub.Unload.Start
f.ODBC.Connection!conx.Close
f.Intrinsic.Control.End
Program.Sub.Unload.End

Program.Sub.Catching.Start
f.Intrinsic.Control.Try
	v.Local.sMsg.Declare
	v.Local.sPath.Declare
	v.Local.sErrorDescr.Declare
	v.Local.sTitle.Declare
	f.Intrinsic.String.Replace(v.Ambient.ScriptPath,"\","\\",v.Local.sPath)
	f.Intrinsic.String.Build("{0}\\GCG_6318_Maint.g2u",v.Local.sPath,v.Local.sPath)
	f.Intrinsic.String.Replace(v.Args.ErrorDesc,"\","\\",v.Local.sErrorDescr)
	
	f.Intrinsic.String.Build("RTF{\rtf1\fbidis\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset1 Segoe UI Symbol;}{\f1\fnil Times New Roman;}{\f2\fnil\fcharset0 Times New Roman;}{\f3\fnil\fcharset1 Segoe UI Emoji;}}{0}{\colortbl ;\red247\green150\blue70;\red0\green176\blue80;\red0\green128\blue0;}{0}{\*\generator Riched20 10.0.18362}\viewkind4\uc1{0}\pard\sl240\slmult1\cf1\b\f0\fs20\u-10179?\u-9026?\cf0\f1  \b0\f2 {1}\tab\par{0}\f3\u9881?\u-497?\f1  \f2 {2}\par{0}\cf2\f3\u-10178?\u-8706?\cf0\f1  \f2 {3}\cf3\lang9\par{0}}",v.Ambient.NewLine,v.Local.sPath,v.Args.Sub,v.Local.sErrorDescr,v.Local.sMsg)
	f.Intrinsic.String.Build("GAB Error Number {0}",v.Args.errorno,v.Local.sTitle)
	f.Intrinsic.UI.MsgboxExt(v.Local.sTitle,v.Local.sMsg,1)
	F.Intrinsic.Control.CallSub("Unload")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
	F.Intrinsic.Control.CallSub("Unload")
f.Intrinsic.Control.EndTry
Program.Sub.Catching.End

Program.Sub.gsCodes_RowCellClick.Start
f.Intrinsic.Control.Try
	V.Local.bFlag.Declare
	
	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.CaseAny("NumCodeAutoDispose","NumCodeWOHold","Email","AlphaCodeAutoDispose","AlphaCodeWOHold","ApplyMapAutoScrap")
			f.Intrinsic.Control.If(v.DataTable.Codes(v.Args.RowIndex).[v.Args.Column]!FieldValString,=,"")	
				v.Local.bFlag.Set(False)
			f.Intrinsic.Control.Else
				v.Local.bFlag.Set(v.DataTable.Codes(v.Args.RowIndex).[v.Args.Column]!FieldValString)
			f.Intrinsic.Control.EndIf
			f.Data.DataTable.SetValue("Codes",v.Args.RowIndex,v.Args.Column,v.Local.bFlag.Not)
		
	f.Intrinsic.Control.EndSelect	

f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry	
Program.Sub.gsCodes_RowCellClick.End

Program.Sub.Form_ExportClick.Start
f.Intrinsic.Control.Try
	v.Local.bExcel.Declare
	v.Local.sExportPrefix.Declare
	v.Local.bFileLocked.Declare
	v.Local.sFileExport.Declare
	v.Local.sMsg.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\RJC{1}_{2}.xlsx",V.Caller.LocalGssTempDir,v.Local.sExportPrefix,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsCodes.Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\RJC{1}_{2}.csv",V.Caller.LocalGssTempDir,v.Local.sExportPrefix,v.Ambient.Now.FormatMMDDYYYYHhNnSs,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.Form.gsCodes.Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf	
	
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub("Catching","sub",v.Ambient.CurrentSubroutine,"errorno",v.Ambient.ErrorNumber,"errordesc",v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry		
Program.Sub.Form_ExportClick.End

Program.Sub.Form_UserButtonClicked.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'V.ARGS.BUTTON: ButtonName of the button clicked	
	F.Intrinsic.Control.SelectCase(V.Args.Button)
		
		F.Intrinsic.Control.Case("CheckRules")
			
			f.Intrinsic.Control.CallSub(Check_Rule)	
			
		F.Intrinsic.Control.Case("SaveCodes")
			f.Intrinsic.Control.CallSub(Check_Rule)
			f.Intrinsic.Control.CallSub(Save_Codes)
			
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.Form_UserButtonClicked.End

Program.Sub.Check_Rule.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.iCnt.Declare
	v.Local.sQtySign.Declare
	v.Local.sQtyValue.Declare
	v.Local.sAndOr.Declare
	v.Local.sDollarsSign.Declare
	v.Local.sDollarsValue.Declare
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Codes.RowCount--,1)
		v.Local.sQtySign.Set(v.DataTable.Codes(v.Local.iCnt).QuantitySign!FieldValTrim)
		v.Local.sQtyValue.Set(v.DataTable.Codes(v.Local.iCnt).QuantityValue!FieldValTrim)
		v.Local.sAndOr.Set(v.DataTable.Codes(v.Local.iCnt).AndOr!FieldValTrim)
		v.Local.sDollarsSign.Set(v.DataTable.Codes(v.Local.iCnt).DollarsSign!FieldValTrim)
		v.Local.sDollarsValue.Set(v.DataTable.Codes(v.Local.iCnt).DollarsValue!FieldValTrim)
		
		f.Intrinsic.Control.If(v.Local.sQtyValue,=,"")		
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"QuantityValue","")		
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.sDollarsValue,=,"")		
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"DollarsValue","")		
		f.Intrinsic.Control.EndIf		
		
		f.Intrinsic.Control.If(v.DataTable.Codes(v.Local.iCnt).Email!FieldValString,=,"")		
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"Email",False)		
		f.Intrinsic.Control.EndIf		
		
		f.Intrinsic.Control.If(v.DataTable.Codes(v.Local.iCnt).ApplyMapAutoScrap!FieldValString,=,"")		
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"ApplyMapAutoScrap",False)		
		f.Intrinsic.Control.EndIf		
		
		'If Qty Sign <> '', there must be a qty value and vice versa
		f.Intrinsic.Control.If(v.Local.sQtySign,=,"",and,v.Local.sQtyValue,<>,"")
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"QuantityValue","")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sQtySign,<>,"",and,v.Local.sQtyValue,=,"")
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"QuantitySign","")
		f.Intrinsic.Control.EndIf				
		
		'If Dollars sign <>, there must be a Dollars value
		f.Intrinsic.Control.If(v.Local.sDollarsSign,=,"",and,v.Local.sDollarsValue,<>,"")
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"DollarsValue","")
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.If(v.Local.sDollarsSign,<>,"",and,v.Local.sDollarsValue,=,"")
			f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"DollarsSign","")
		f.Intrinsic.Control.EndIf			
		
		'If there is an And/Or: 4 cells must be populated		
		f.Intrinsic.Control.If(v.Local.sAndOr,<>,"")
			f.Intrinsic.Control.If(v.Local.sQtySign,=,"","or",v.Local.sQtyValue,=,"",v.Local.sDollarsSign,=,"",v.Local.sDollarsValue,=,"")
				f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"QuantitySign","","QuantityValue","","DollarsSign","","DollarsValue","","AndOr","")
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf	
		
		'If there are 4 cells populated but there is no andOr
			f.Intrinsic.Control.If(v.Local.sQtySign,<>,"",and,v.Local.sQtyValue,<>,"",v.Local.sDollarsSign,<>,"",v.Local.sDollarsValue,<>,"")
			f.Intrinsic.Control.If(v.Local.sAndOr,=,"")
				f.Data.DataTable.SetValue("Codes",v.Local.iCnt,"QuantitySign","","QuantityValue","","DollarsSign","","DollarsValue","","AndOr","")
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf		
	
	f.Intrinsic.Control.Next(v.Local.iCnt)			

	gui.Form..ShowAlert("CheckRulesAlert","Rule Error Checking","Completed",v.Enum.Image!CHECK_COLOR)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.Check_Rule.End

Program.Sub.Save_Codes.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.iCnt.Declare
	v.Local.sQtySign.Declare
	v.Local.sQtyValue.Declare
	v.Local.sAndOr.Declare
	v.Local.sDollarsSign.Declare
	v.Local.sDollarsValue.Declare	
	v.Local.sRuleClause.Declare
	v.Local.sNumCode.Declare
	v.Local.sNumCodeDescr.Declare
	v.Local.sNumCodeAutoDispose.Declare
	v.Local.sNumcodeWOHold.Declare
	v.Local.sAlphaCode.Declare
	v.Local.sAlphaCodeDescr.Declare
	v.Local.sAlphaCodeAutoDispose.Declare
	v.Local.sAlphaCodeWOHold.Declare	
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.dDate.Declare
	v.Local.sAlphaCodeExisted.Declare
	v.Local.sApplyMapAutoScrap.Declare
	
	v.Local.dDate.Set(v.Ambient.Date)
	
	f.Data.DataTable.AcceptChanges("Codes")
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.Codes.RowCount--,1)
	
		v.Local.sQtySign.Set(v.DataTable.Codes(v.Local.iCnt).QuantitySign!FieldValTrim)
		v.Local.sQtyValue.Set(v.DataTable.Codes(v.Local.iCnt).QuantityValue!FieldValTrim)
		v.Local.sAndOr.Set(v.DataTable.Codes(v.Local.iCnt).AndOr!FieldValTrim)
		v.Local.sDollarsSign.Set(v.DataTable.Codes(v.Local.iCnt).DollarsSign!FieldValTrim)
		v.Local.sDollarsValue.Set(v.DataTable.Codes(v.Local.iCnt).DollarsValue!FieldValTrim)	
		
		v.Local.sNumCode.Set(v.DataTable.Codes(v.Local.iCnt).NumCode!FieldValString)
		v.Local.sNumCodeDescr.Set(v.DataTable.Codes(v.Local.iCnt).NumCodeDescription!FieldValTrim)
		v.Local.sNumCodeDescr.Set(v.Local.sNumCodeDescr.left50)
		v.Local.sNumCodeAutoDispose.Set(v.DataTable.Codes(v.Local.iCnt).NumCodeAutoDispose!FieldValString)
		f.Intrinsic.Control.If(v.Local.sNumCodeAutoDispose,=,"True")
			v.Local.sNumCodeAutoDispose.Set("Y")
		f.Intrinsic.Control.Else
			v.Local.sNumCodeAutoDispose.Set("N")
		f.Intrinsic.Control.EndIf
		v.Local.sNumcodeWOHold.Set(v.DataTable.Codes(v.Local.iCnt).NumCodeWOHold!FieldValString)
		f.Intrinsic.Control.If(v.Local.sNumcodeWOHold,=,"True")
			v.Local.sNumcodeWOHold.Set("Y")
		f.Intrinsic.Control.Else
			v.Local.sNumcodeWOHold.Set("N")
		f.Intrinsic.Control.EndIf		
		v.Local.sAlphaCode.Set(v.DataTable.Codes(v.Local.iCnt).AlphaCode!FieldValString)
		v.Local.sAlphaCodeDescr.Set(v.DataTable.Codes(v.Local.iCnt).AlphaCodeDescription!FieldValTrim)
		v.Local.sAlphaCodeDescr.Set(v.Local.sAlphaCodeDescr.Left50)
		v.Local.sAlphaCodeAutoDispose.Set(v.DataTable.Codes(v.Local.iCnt).AlphaCodeAutoDispose!FieldValString)
		f.Intrinsic.Control.If(v.Local.sAlphaCodeAutoDispose,=,"True")
			v.Local.sAlphaCodeAutoDispose.Set("Y")
		f.Intrinsic.Control.Else
			v.Local.sAlphaCodeAutoDispose.Set("N")
		f.Intrinsic.Control.Endif	
		v.Local.sAlphaCodeWOHold.Set(v.DataTable.Codes(v.Local.iCnt).AlphaCodeWOHold!FieldValString)
		f.Intrinsic.Control.If(v.Local.sAlphaCodeWOHold,=,"True")
			v.Local.sAlphaCodeWOHold.Set("Y")
		f.Intrinsic.Control.Else
			v.Local.sAlphaCodeWOHold.Set("N")
		f.Intrinsic.Control.Endif	
		v.Local.sAlphaCodeExisted.Set(v.DataTable.Codes(v.Local.iCnt).AlphaCodeExisted!FieldValString)
		v.Local.sApplyMapAutoScrap.Set(v.DataTable.Codes(v.Local.iCnt).ApplyMapAutoScrap!FieldValString)
		
		v.Local.sRuleClause.Set("")
		f.Intrinsic.Control.If(v.Local.sQtySign,<>,"")
			f.Intrinsic.Control.If(v.Local.sDollarsSign,=,"")
				f.Intrinsic.String.Build("Quantity {0} {1}",v.Local.sQtySign,v.Local.sQtyValue,v.Local.sRuleClause)
			f.Intrinsic.Control.Else	
				f.Intrinsic.String.Build("Quantity {0} {1} {2} Dollars {3} {4}",v.Local.sQtySign,v.Local.sQtyValue,v.Local.sAndOr,v.Local.sDollarsSign,v.Local.sDollarsValue,v.Local.sRuleClause)
			f.Intrinsic.Control.EndIf			
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.If(v.Local.sDollarsSign,<>,"")
				f.Intrinsic.String.Build("Dollars {0} {1}",v.Local.sDollarsSign,v.Local.sDollarsValue,v.Local.sRuleClause)		
			f.Intrinsic.Control.EndIf		
		f.Intrinsic.Control.EndIf
		f.Data.Datatable.SetValue("Codes",v.Local.iCnt,"RuleClause",v.Local.sRuleClause)
		
		'Save to Core Database for NumCode
		f.Intrinsic.Control.If(v.Local.sNumCode.Trim,<>,"")
			'Rejected_Code
			f.Intrinsic.String.Build("Select Code from Rejected_Code where Left(Code,2) = '{0}'",v.Local.sNumCode,v.Local.sSQL)
			f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
				'Insert
				f.Intrinsic.String.Build("Insert into Rejected_Code (CODE,DESCR,DISPOSE_SCRAP,WO_HOLD,CHG_DATE,CHG_TIME,CHG_BY,CHG_PGM) values ('{0}','{1}','{2}','{3}','{4}',{5},'{6}','{7}')",V.Local.sNumCode,v.Local.sNumCodeDescr.PSQLFriendly,v.Local.sNumCodeAutoDispose,v.Local.sNumcodeWOHold,v.Local.dDate.PervasiveDate,"NOW()",V.Caller.User,"6318MT",v.Local.sSQL)
			f.Intrinsic.Control.Else
				'Update
				f.Intrinsic.String.Build("Update Rejected_Code set DESCR = '{1}',DISPOSE_SCRAP = '{2}',WO_HOLD = '{3}',CHG_DATE = '{4}',CHG_TIME = {5},CHG_BY = '{6}',CHG_PGM = '{7}' where Code = '{0}'",V.Local.sNumCode,v.Local.sNumCodeDescr.PSQLFriendly,v.Local.sNumCodeAutoDispose,v.Local.sNumcodeWOHold,v.Local.dDate.PervasiveDate,"NOW()",V.Caller.User,"6318MT",v.Local.sSQL)		
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!conx.Execute(v.Local.sSQL)
			
			'2nd place: RJCT_SCRP_CODES
			f.Intrinsic.String.Build("SELECT Sys FROM RJCT_SCRP_CODES WHERE SYS = 'REJ' AND SUB_SYS = 'CDE' and left(Scrap_Code,2) = '{0}' and ltrim(rtrim(Filler10)) = ''",v.Local.sNumCode,v.Local.sSQL)
			f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
				'Insert
				f.Intrinsic.String.Build("Insert into RJCT_SCRP_CODES (SYS,SUB_SYS,SCRAP_CODE,FILLER10,SCRAP_CODE_DESC,DISPOSE_SCRAP,FILLER52) values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}  YNY   Y   NY                   N  N  NNN N NNNY ')","REJ","CDE",V.Local.sNumCode,"          ",V.Local.sNumCodeDescr.PSQLFriendly,v.Local.sNumCodeAutoDispose,v.Local.sNumcodeWOHold,v.Local.sSQL)
			f.Intrinsic.Control.Else		
				'Update
				f.Intrinsic.String.Build("Update RJCT_SCRP_CODES set SCRAP_CODE_DESC = '{4}',DISPOSE_SCRAP = '{5}',FILLER52 = '{6}  YNY   Y   NY                   N  N  NNN N NNNY ' where SYS = '{0}' and SUB_SYS = '{1}' and SCRAP_CODE = '{2}' and FILLER10 = '{3}'","REJ","CDE",V.Local.sNumCode,"          ",V.Local.sNumCodeDescr.PSQLFriendly,v.Local.sNumCodeAutoDispose,v.Local.sNumcodeWOHold,v.Local.sSQL)	
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!conx.Execute(v.Local.sSQL)		
		f.Intrinsic.Control.EndIf
		
		
		'Save to Core Database for AlphaCode
		f.Intrinsic.Control.If(v.Local.sAlphaCodeExisted,=,"Yes",or,v.Local.sApplyMapAutoScrap,=,"True")
			'Rejected_Code
			f.Intrinsic.String.Build("Select Code from Rejected_Code where Left(Code,2) = '{0}'",v.Local.sAlphaCode,v.Local.sSQL)
			f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
				'Insert
				f.Intrinsic.String.Build("Insert into Rejected_Code (CODE,DESCR,DISPOSE_SCRAP,WO_HOLD,CHG_DATE,CHG_TIME,CHG_BY,CHG_PGM) values ('{0}','{1}','{2}','{3}','{4}',{5},'{6}','{7}')",V.Local.sAlphaCode,v.Local.sAlphaCodeDescr.PSQLFriendly,v.Local.sAlphaCodeAutoDispose,v.Local.sAlphaCodeWOHold,v.Local.dDate.PervasiveDate,"NOW()",V.Caller.User,"6318MT",v.Local.sSQL)
			f.Intrinsic.Control.Else
				'Update
				f.Intrinsic.String.Build("Update Rejected_Code set DESCR = '{1}',DISPOSE_SCRAP = '{2}',WO_HOLD = '{3}',CHG_DATE = '{4}',CHG_TIME = {5},CHG_BY = '{6}',CHG_PGM = '{7}' where Code = '{0}'",V.Local.sAlphaCode,v.Local.sAlphaCodeDescr.PSQLFriendly,v.Local.sAlphaCodeAutoDispose,v.Local.sAlphaCodeWOHold,v.Local.dDate.PervasiveDate,"NOW()",V.Caller.User,"6318MT",v.Local.sSQL)	
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!conx.Execute(v.Local.sSQL)
			f.Intrinsic.Control.If(v.Local.sAlphaCodeExisted,=,"")
				f.Data.Datatable.SetValue("Codes",v.Local.iCnt,"AlphaCodeExisted","Yes")
			f.Intrinsic.Control.EndIf
			
			
			'2nd place: RJCT_SCRP_CODES
			f.Intrinsic.String.Build("SELECT Sys FROM RJCT_SCRP_CODES WHERE SYS = 'REJ' AND SUB_SYS = 'CDE' and left(Scrap_Code,2) = '{0}' and ltrim(rtrim(Filler10)) = ''",v.Local.sAlphaCode,v.Local.sSQL)
			f.ODBC.Connection!conx.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
			f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
				'Insert
				f.Intrinsic.String.Build("Insert into RJCT_SCRP_CODES (SYS,SUB_SYS,SCRAP_CODE,FILLER10,SCRAP_CODE_DESC,DISPOSE_SCRAP,FILLER52) values ('{0}','{1}','{2}','{3}','{4}','{5}','{6}  YNY   Y   NY                   N  N  NNN N NNNY ')","REJ","CDE",V.Local.sAlphaCode,"          ",V.Local.sAlphaCodeDescr.PSQLFriendly,v.Local.sAlphaCodeAutoDispose,v.Local.sAlphaCodeWOHold,v.Local.sSQL)
			f.Intrinsic.Control.Else
				'Update
				f.Intrinsic.String.Build("Update RJCT_SCRP_CODES set SCRAP_CODE_DESC = '{4}',DISPOSE_SCRAP = '{5}',FILLER52 = '{6}  YNY   Y   NY                   N  N  NNN N NNNY ' where SYS = '{0}' and SUB_SYS = '{1}' and SCRAP_CODE = '{2}' and FILLER10 = '{3}'","REJ","CDE",V.Local.sAlphaCode,"          ",V.Local.sAlphaCodeDescr.PSQLFriendly,v.Local.sAlphaCodeAutoDispose,v.Local.sAlphaCodeWOHold,v.Local.sSQL)	
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!conx.Execute(v.Local.sSQL)			
			
		f.Intrinsic.Control.EndIf			
		
	f.Intrinsic.Control.Next(v.Local.iCnt)	
	
	f.ODBC.Connection!conx.Execute("Delete from GCG_6318_Rules")
	
	f.Data.DataView.Create("Codes","vSave",22,"IsNull(NumCode,'') <> ''","NumCode")
	
	f.Data.DataView.ToDataTable("Codes","vSave","ToSave",True)
	f.Data.DataView.Close("Codes","vSave")
	
	f.Data.DataTable.SaveToDB("ToSave","conx","GCG_6318_Rules","",128,"NumCode@!@NumCode*!*QuantitySign@!@QuantitySign*!*QuantityValue@!@QuantityValue*!*AndOr@!@AndOr*!*DollarsSign@!@DollarsSign*!*DollarsValue@!@DollarsValue*!*Email@!@Email*!*RuleClause@!@RuleClause*!*ApplyMapAutoScrap@!@ApplyMapAutoScrap")
	f.Data.DataTable.Close("ToSave")	

	gui.Form..ShowAlert("SaveCodesAlert","Saving Codes","Completed",v.Enum.Image!CHECK_COLOR)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.Save_Codes.End

Program.Sub.gsCodes_CellValueChanged.Start
F.Intrinsic.Control.Try
	v.Local.sValue.Declare
	v.Local.bNum.Declare
	
	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.CaseAny("QuantityValue","DollarsValue")
			f.Intrinsic.Control.If(v.Args.Value.Trim,<>,"")
				f.Intrinsic.Math.IsNumeric(v.Args.Value,v.Local.bNum)
				f.Intrinsic.Control.If(v.Local.bNum.Not)
					f.Intrinsic.UI.Msgbox("Invalid value. Must be numeric.","Invalid")
					f.Data.DataTable.SetValue("Codes",v.Args.RowIndex,v.Args.Column,"")
				f.Intrinsic.Control.EndIf	
			f.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.gsCodes_CellValueChanged.End

Program.Sub.ddlColumns_LostFocus.Start
F.Intrinsic.Control.Try
	v.Local.sCol.Declare
	
	f.Intrinsic.Control.BlockEvents
	f.Data.Dictionary.ReturnKeyFromValue("dictBulkColumns",v.Screen.SetBulk!ddlColumns.Text,v.Local.sCol)
	gui.SetBulk.txtColumn.Text(v.Local.sCol)	
	gui.SetBulk.txtDatatype.Text(v.Dictionary.dictColumnDataType![v.Local.sCol])
	f.Intrinsic.Control.SelectCase(v.Dictionary.dictColumnDataType![v.Local.sCol])
		f.Intrinsic.Control.Case("String")
			gui.SetBulk.txtTextValue.Visible(True)
			gui.SetBulk.txtNumeric.Visible(False)
			gui.SetBulk.ddlBitValue.Visible(False)
			gui.SetBulk.ddlSign.Visible(False)
			gui.SetBulk.ddlAndOr.Visible(False)
			gui.SetBulk.txtTextValue.SetFocus
		f.Intrinsic.Control.Case("Numeric")
			gui.SetBulk.txtTextValue.Visible(False)
			gui.SetBulk.txtNumeric.Visible(True)
			gui.SetBulk.ddlBitValue.Visible(False)	
			gui.SetBulk.ddlSign.Visible(False)
			gui.SetBulk.ddlAndOr.Visible(False)
			gui.SetBulk.txtNumeric.SetFocus
		f.Intrinsic.Control.Case("Boolean")
			gui.SetBulk.txtTextValue.Visible(False)
			gui.SetBulk.txtNumeric.Visible(False)
			gui.SetBulk.ddlBitValue.Visible(True)
			gui.SetBulk.ddlBitValue.ListIndex(0)
			gui.SetBulk.ddlSign.Visible(False)
			gui.SetBulk.ddlAndOr.Visible(False)
			gui.SetBulk.ddlBitValue.SetFocus
		f.Intrinsic.Control.Case("Sign")
			gui.SetBulk.txtTextValue.Visible(False)
			gui.SetBulk.txtNumeric.Visible(False)
			gui.SetBulk.ddlBitValue.Visible(False)
			gui.SetBulk.ddlSign.Visible(True)	
			gui.SetBulk.ddlSign.ListIndex(0)
			gui.SetBulk.ddlAndOr.Visible(False)
			gui.SetBulk.ddlSign.SetFocus
		f.Intrinsic.Control.Case("AndOr")
			gui.SetBulk.txtTextValue.Visible(False)
			gui.SetBulk.txtNumeric.Visible(False)
			gui.SetBulk.ddlBitValue.Visible(False)
			gui.SetBulk.ddlSign.Visible(False)	
			gui.SetBulk.ddlAndOr.Visible(True)
			gui.SetBulk.ddlAndOr.ListIndex(0)
			gui.SetBulk.ddlAndOr.SetFocus
	f.Intrinsic.Control.EndSelect
	gui.SetBulk.cmdOKSetBulk.Visible(True)
	f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.ddlColumns_LostFocus.End

Program.Sub.SetBulk_UnLoad.Start
gui.SetBulk..Visible(False)
gui.Form..Enabled(True)
gui.Form..SetFocus
Program.Sub.SetBulk_UnLoad.End
Program.Sub.cmdOKSetBulk_Click.Start
F.Intrinsic.Control.Try
	v.Local.sCol.Declare
	v.Local.sDataType.Declare
	v.Local.sFilter.Declare
	v.Local.sValue.Declare
	
	gui.SetBulk.cmdOKSetBulk.Enabled(False)
	v.Local.sCol.Set(v.Screen.SetBulk!txtColumn.Text)
	v.Local.sDataType.Set(v.Screen.SetBulk!txtDatatype.Text)
	
	f.Intrinsic.String.Replace(v.Global.sRow,"*!*","','",v.Global.sRow)
	f.Intrinsic.String.Build("NumOrder in ('{0}')",v.Global.sRow,v.Local.sFilter)
	f.Data.DataView.Create("Codes","vSetBulk",22,v.Local.sFilter,"")
	f.Intrinsic.Control.SelectCase(v.Local.sDataType)
		f.Intrinsic.Control.Case("String")
			v.Local.sValue.Set(v.Screen.SetBulk!txtTextValue.Text.Trim)
			v.Local.sValue.Set(v.Local.sValue.left50)
		f.Intrinsic.Control.Case("Numeric")
			v.Local.sValue.Set(v.Screen.SetBulk!txtNumeric.Text.Trim)
		f.Intrinsic.Control.Case("Boolean")
			v.Local.sValue.Set(v.Screen.SetBulk!ddlBitValue.Text)
		f.Intrinsic.Control.Case("Sign")
			v.Local.sValue.Set(v.Screen.SetBulk!ddlSign.Text)
		f.Intrinsic.Control.Case("AndOr")
			v.Local.sValue.Set(v.Screen.SetBulk!ddlAndOr.Text)
	f.Intrinsic.Control.EndSelect
	
	f.Data.DataView.SetValue("Codes","vSetBulk",-1,v.Local.sCol,v.Local.sValue)
	f.Data.DataView.Close("Codes","vSetBulk")
	f.Data.Datatable.AcceptChanges("Codes")
	gui.SetBulk.cmdOKSetBulk.Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.cmdOKSetBulk_Click.End

Program.Sub.ddlColumns_Click.Start
F.Intrinsic.Control.Try
	
	gui.SetBulk.cmdOKSetBulk.Visible(False)
	
	gui.SetBulk.txtTextValue.Visible(False)
	gui.SetBulk.txtNumeric.Visible(False)
	gui.SetBulk.ddlBitValue.Visible(False)
	gui.SetBulk.ddlSign.Visible(False)	
	gui.SetBulk.ddlAndOr.Visible(False)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Catching,"Sub",V.Ambient.CurrentSubroutine,"ErrorNo",V.Ambient.ErrorNumber,"ErrorDesc",V.Ambient.ErrorDescription) 
F.Intrinsic.Control.EndTry
Program.Sub.ddlColumns_Click.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$bnguyen$}$20210727184538077$}$tqzwddZCkmoVRWHEL6DZymEEseDhOdzi4gqjAQCt2JxokLJyxzQVBaGNMfZGVr/WWVMhYxweL+o=
Program.Sub.Comments.End